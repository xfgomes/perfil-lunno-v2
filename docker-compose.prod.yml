version: "3.9"

services:
  # 🗄️ Banco de dados PostgreSQL
  db:
    image: postgres:16
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - lunno_net

  # ⚙️ API Flask (Backend)
  backend:
    build: ./backend
    restart: always
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - lunno_net

  # 💻 Frontend React (build feito no Dockerfile)
  frontend:
    build:
      context: ./frontend
    restart: always
    depends_on:
      - backend
    networks:
      - lunno_net

  # 🌐 Nginx (Proxy e servidor do build do React)
  nginx:
    image: nginx:alpine
    restart: always
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - lunno_net

# 🔒 Volumes persistentes
volumes:
  db_data:

# 🌐 Rede compartilhada entre todos os containers
networks:
  lunno_net:
    driver: bridge
